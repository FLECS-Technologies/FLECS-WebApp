name: Develop

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 12.x
      - name: build
        run: make dev-build
      - name: archive raw artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
          retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    env:
      REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
      REGISTRY_AUTH: ${{ secrets.REGISTRY_AUTH }}
      VERSION_SPECIAL: -dev

    steps:
      - uses: actions/checkout@v3
      - name: download raw artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,arm
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.9.1
          driver-opts: image=moby/buildkit:v0.11.0
      - name: build Docker image
        run: make docker_${{ matrix.arch }}

  container-registry:
    needs: docker
    runs-on: ubuntu-22.04

    env:
      VERSION_SPECIAL: -dev

    steps:
      - uses: actions/checkout@v3
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: cr.flecs.tech
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_AUTH }}
      - name: Pull images
        run: |
          docker pull --platform=linux/amd64 cr.flecs.tech/webapp:$(make version)-amd64
          docker pull --platform=linux/arm64 cr.flecs.tech/webapp:$(make version)-arm64
          docker pull --platform=linux/armhf cr.flecs.tech/webapp:$(make version)-armhf
      - name: Create Docker manifest
        run: |
          docker manifest create cr.flecs.tech/webapp:$(make version) cr.flecs.tech/webapp:$(make version)-amd64 cr.flecs.tech/webapp:$(make version)-arm64 cr.flecs.tech/webapp:$(make version)-armhf
          docker manifest create cr.flecs.tech/webapp:develop cr.flecs.tech/webapp:$(make version)-amd64 cr.flecs.tech/webapp:$(make version)-arm64 cr.flecs.tech/webapp:$(make version)-armhf
      - name: Push Docker manifest
        run: |
          docker manifest push cr.flecs.tech/webapp:$(make version)
          docker manifest push cr.flecs.tech/webapp:develop

  package:
    needs: build
    runs-on: ubuntu-22.04

    env:
      VERSION_SPECIAL: -dev

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    steps:
      - uses: actions/checkout@v3
      - name: package
        run: |
          make package_${{ matrix.arch }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy packages and latest files
        uses: azure/CLI@v1
        with:
          azcliversion: 2.53.0
          inlineScript: |
            for i in `find ./out/${{ matrix.arch }}/pkg -mindepth 1 -maxdepth 1 -name "latest_flecs-webapp_*"`; do \
              echo "Uploading ${i}"; \
              az storage blob upload --account-name flecs --container-name flecs-dl --name dev/flecs-webapp/$(basename ${i}) --file ${i} --overwrite
            done
            for i in `find ./out/${{ matrix.arch }}/pkg -mindepth 1 -maxdepth 1 -name "*.deb"`; do \
              echo "Uploading ${i}"; \
              az storage blob upload --account-name flecs --container-name flecs-dl --name dev/flecs-webapp/deb/$(basename ${i}) --file ${i} --overwrite
            done
            for i in `find ./out/${{ matrix.arch }}/pkg -mindepth 1 -maxdepth 1 -name "*.deb"`; do \
              echo "Uploading ${i}"; \
              az storage blob upload --account-name flecs --container-name flecs-dl --name dev/flecs-webapp/tar/$(basename ${i}) --file ${i} --overwrite
            done
