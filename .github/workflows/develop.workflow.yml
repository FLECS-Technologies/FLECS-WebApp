name: Develop

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 12.x
      - name: build
        run: make dev-build
      - name: archive raw artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
          retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    env:
      REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
      REGISTRY_AUTH: ${{ secrets.REGISTRY_AUTH }}
      VERSION_SPECIAL: -dev

    steps:
      - uses: actions/checkout@v3
      - name: download raw artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,arm
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.9.1
          driver-opts: image=moby/buildkit:v0.11.0
      - name: build Docker image
        run: make docker_${{ matrix.arch }}

  docker-hub:
    needs: docker
    runs-on: ubuntu-22.04

    env:
      VERSION_SPECIAL: -dev

    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_AUTH }}
      - name: Pull images
        run: |
          docker pull --platform=linux/amd64 flecs/webapp:$(make version)-amd64
          docker pull --platform=linux/arm64 flecs/webapp:$(make version)-arm64
          docker pull --platform=linux/armhf flecs/webapp:$(make version)-armhf
      - name: Create Docker manifest
        run: |
          docker manifest create flecs/webapp:$(make version) flecs/webapp:$(make version)-amd64 flecs/webapp:$(make version)-arm64 flecs/webapp:$(make version)-armhf
      - name: Push Docker manifest
        run: |
          docker manifest push flecs/webapp:$(make version)

  package:
    needs: docker
    runs-on: ubuntu-22.04

    env:
      VERSION_SPECIAL: -dev

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    steps:
      - uses: actions/checkout@v3
      - name: package
        run: |
          make deb-pkg_${{ matrix.arch }}

      - name: Setup AWS CLI
        env:
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
          S3_HOST: ${{ secrets.S3_HOST }}
          S3_REGION: ${{ secrets.S3_REGION }}
        run: |
          aws configure set aws_access_key_id ${S3_ACCESS_KEY}
          aws configure set aws_secret_access_key ${S3_SECRET_KEY}

      - name: Deploy packages and latest files
        env:
          S3_HOST: ${{ secrets.S3_HOST }}
          S3_REGION: ${{ secrets.S3_REGION }}
        run: |
          for i in `find out/ -mindepth 1 -maxdepth 1 -name "*.deb" -o -name "latest_flecs-webapp_*"`; do \
            echo "Uploading ${i}"; \
            aws s3api put-object --acl public-read --endpoint-url https://${S3_HOST} --region ${S3_REGION} --bucket flecs-dl --key `basename ${i}` --body ${i}; \
          done
